name: Continuous Integration
concurrency: ci
on:
  - push
  - workflow_dispatch

jobs:
  tests:
    name: Unit & E2E tests
    runs-on: ubuntu-18.04

    steps:
    # Setup steps
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .env file
      run: cp .env.ci .env
    - name: Setup backend
      uses: ./.github/actions/setup-backend
    - name: Setup & build frontend
      uses: ./.github/actions/build-frontend
      with:
        env_file: .env.ci

    # Backend tests
    - name: Run backend tests
      run: php artisan test

    # End-to-end tests
    - name: Start the server for the end-to-end tests
      run: php artisan serve --port 8080 &
    - name: Reset the database state
      run: php artisan migrate:fresh
    - name: Seed the database
      run: php artisan db:seed
    - name: Run end-to-end tests
      run: CHROMEWEBDRIVER="/usr/bin/chromedriver" npm run tests
    - name: Archive test results
      if: always() # even after test failure
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: tests/e2e/output

  release-dev:
    name: Release frontend build artifact for the dev server
    needs: tests
    if: ${{ github.ref_name == 'master' }}
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Release frontend build
      uses: ./.github/actions/release-frontend
      with:
        env_file: .env.dev
        release_token: ${{ secrets.GITHUB_TOKEN }}
        release_tag: dev
        release_title: Development Build
        is_prerelease: true

  release-prod:
    name: Release frontend build artifact for the prod server
    needs: tests
    if: ${{ github.ref_name == 'prod_server' }}
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Release frontend build
      uses: ./.github/actions/release-frontend
      with:
        env_file: .env.prod
        release_token: ${{ secrets.GITHUB_TOKEN }}
        release_tag: prod
        release_title: Production Build
        is_prerelease: false

  dev-deploy:
    if: "false" # disable deployment job for now
    name: Deployment to dev
    needs: release-dev
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Deploy to dev
      uses: ./.github/actions/deploy
      with:
        stage: dev
        private-key: ${{ secrets.PRIVATE_KEY }}
        known-hosts: ${{ secrets.KNOWN_HOSTS }}
